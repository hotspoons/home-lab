
## NFS Configuration - set NFS server and path for dynamic storage for persistent volumes
BASE_ARCH=${base_arch}
AARCH=${aarch}
EL_VERSION=${el_version}
CONTAINERD_VERSION=${containerd_version}
HELM_VERSION=${helm_version}
KUBERNETES_VERSION=${kubernetes_version}

#Setup configuration
DOCKER_REPO=https://download.docker.com/linux/centos/docker-ce.repo
CONTAINER_IO_PKG=https://download.docker.com/linux/centos/$EL_VERSION/$BASE_ARCH/stable/Packages/containerd.io-$CONTAINERD_VERSION.$BASE_ARCH.rpm
KUBERNETES_REPO=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$BASE_ARCH
HASHICORP_REPO=https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
KUBERNETES_GPG='https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg'
ETCD_URL=https://github.com/etcd-io/etcd/releases/download/v3.5.9/etcd-v3.5.9-linux-amd64.tar.gz
HELM_URL=https://get.helm.sh
HELM_FILE=helm-v$HELM_VERSION-linux-$AARCH.tar.gz

################################################
## Fix stupidity in default dhclient for EL   ##
################################################

## Force sending hostname to DHCP server by cycling network and DHCP lease
systemctl stop NetworkManager.service
dhclient -r eth0
systemctl start NetworkManager.service
dhclient -1 eth0

################################################
## Configure EL8 for networking and tools     ##
################################################
dnf -y upgrade
setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
modprobe br_netfilter

dnf install -y wget git lsof firewalld bash-completion iproute-tc python3 python3-pip nano jq bash-completion make zip unzip pciutils
yum group install "Development Tools"
wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod +x /usr/bin/yq
sed -i 's/FirewallBackend=nftables/FirewallBackend=iptables/g' /etc/firewalld/firewalld.conf
systemctl restart firewalld

firewall-cmd --add-masquerade --permanent
firewall-cmd --reload

cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system
swapoff -a


################################################
## Install Docker and Kubernetes              ##
################################################
dnf config-manager --add-repo=$DOCKER_REPO
dnf install -y $CONTAINER_IO_PKG
dnf install docker-ce --nobest -y
sed -i 's/disabled_plugins = \["cri"\]//g' /etc/containerd/config.toml
systemctl start docker
systemctl enable docker

yum-config-manager --add-repo $HASHICORP_REPO

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=$KUBERNETES_REPO
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=$KUBERNETES_GPG
exclude=kube*
EOF

setenforce 0
dnf upgrade -y
dnf install -y terraform vault kubelet kubeadm kubectl --disableexcludes=kubernetes
systemctl enable kubelet
systemctl start kubelet

# Get etcd on the control plane for atomic backups and restores of cluster state
cd /tmp
wget $ETCD_URL
tar -xvf etcd-v3.5.9-linux-amd64.tar.gz
mv etcd-v3.5.9-linux-amd64/etc* /usr/bin/

################################################
## Initialize helm and minio CLI              ##
################################################


curl -o $HELM_FILE $HELM_URL/$HELM_FILE
tar -zxvf $HELM_FILE
mv linux-amd64/helm /usr/bin/helm

curl https://dl.min.io/client/mc/release/linux-amd64/mc -o /usr/bin/mc && chmod +x /usr/bin/mc

################################################
## Clean up space                             ##
################################################

yum clean all


