

## NFS Configuration - set NFS server and path for dynamic storage for persistent volumes
NFS_SERVER=${nfs_server}
NFS_PATH=${nfs_path}
NFS_PROVISION_NAME=${nfs_provision_name}
## IP Address range for load balancer
START_IP=${start_ip}
END_IP=${end_ip}
POD_NETWORK_CIDR=${pod_network_cidr}
JOIN_CMD_PORT=${join_cmd_port}


#Kubernetes utilities setup for persistent volumes, dashboard, and metal load balancer
DASHBOARD_URL=https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended.yaml
METALLB_HELM_REPO=https://metallb.github.io/metallb
NFS_HELM_REPO=https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/

################################################
## Setup firewall rules                       ##
################################################
firewall-cmd --zone=public --permanent --add-port={6443,2379,2380,10250,10251,10252,$JOIN_CMD_PORT}/tcp
firewall-cmd --zone=public --permanent --add-rich-rule "rule family=ipv4 source address=$(hostname -I |  awk '{print $1}')/32 accept"
firewall-cmd --zone=public --permanent --add-rich-rule "rule family=ipv4 source address=172.17.0.0/16 accept"
firewall-cmd --reload

################################################
## Initialize cluster                         ##
################################################

kubeadm init --pod-network-cidr $POD_NETWORK_CIDR
mkdir -p /root/.kube
yes | cp /etc/kubernetes/admin.conf /root/.kube/config
chown $(id -u):$(id -g) /root/.kube/config
export KUBECONFIG=/etc/kubernetes/admin.conf
kubectl taint nodes --all node-role.kubernetes.io/master-
kubectl get nodes


################################################
## Reset everything, clear docker cache       ##
################################################

mkdir -p /tmp/join-cluster
kubeadm token create --print-join-command > /tmp/join-cluster/join_kubernetes_cluster.sh

# TODO - this should probably be over SSL and at least use a shared secret to secure it

cd /tmp/join-cluster/
python3 -m http.server $JOIN_CMD_PORT &

################################################
## Configure auto-provisioned NFS storage     ##
################################################
helm repo add nfs-subdir-external-provisioner $NFS_HELM_REPO
helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \
    --set nfs.server=$NFS_SERVER \
    --set nfs.path=$NFS_PATH


################################################
## Configure Metal Load Balancer              ##
################################################

kubectl get configmap -n kube-system kube-proxy -o yaml > /tmp/proxy.yaml
sed -i 's/strictARP: false/strictARP: true/g' /tmp/proxy.yaml
kubectl replace -f /tmp/proxy.yaml
helm repo add metallb $METALLB_HELM_REPO
helm install metallb metallb/metallb
kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey='$(openssl rand -base64 128)'

cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: metallb-system
  name: config
data:
  config: |
    address-pools:
    - name: default
      protocol: layer2
      addresses:
      - $START_IP-$END_IP
EOF


# kubeadm reset -f && rm -rf /etc/cni/net.d && rm -f $HOME/.kube/config && docker system prune -a -f